"#B79F00",
"#00BA38",
"#00BFC4",
"#619CFF",
"#F564E3")) +
guides(fill=guide_legend("Cohort")) +
My_Theme
leg <- get_legend(for_legend_only)
empty_space = plot_grid(NULL, NULL, NULL, NULL, ncol=4)
top_row = plot_grid(plot_A_B,plot_B_C,plot_C_D,plot_D_E, ncol=4,
rel_widths=c(0.25,0.25,0.25,0.25),
labels=c("A-B","B-C","C-D","D-E"),
label_size = 10)
bottom_row = plot_grid(plot_B_D,plot_C_E,plot_A_E,leg, ncol=4,
rel_widths=c(0.25,0.25,0.25,0.25),
labels=c("B-D","C-E","A-E",""),
label_size = 10)
all_plots <- plot_grid(empty_space,
top_row,
bottom_row,
nrow=3)
pdf(paste0(out_dir,"weight_deltas_by_cohort.pdf"))
ggdraw() +
draw_image(timeline_deltas_weight, x = 0, y = 0.16) +
draw_plot(all_plots)
dev.off()
# DELTA p-values - Cohort
# convert rownames to first column
weight_delta_cohorts <- setDT(cohort_stats, keep.rownames = TRUE)[]
# add data to workbook
addWorksheet(wb, "weight_delta_cohorts")
writeData(wb, sheet = "weight_delta_cohorts", weight_delta_cohorts, rowNames = FALSE)
################################################################################################
# does the breed have anything to do with it??
##############################################################################
# breed
##############################################################################
df <- merge(pigs_1,pigs_2, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$breed.x <- factor(df$breed.x,
levels=c("Landrace x Cross bred (LW x D)",
"Duroc x Landrace",
"Duroc x Large white",
"Large white x Duroc"))
res1 <- aov(diff ~ breed.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$breed.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Ja31_Fe7"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
breed_stats <- aov.out
cw_summary <- df %>%
group_by(breed.x) %>%
tally()
plot_A_B <- ggboxplot(df, x="breed.x", y="diff", fill = "breed.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(breed.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_A_B
############
df <- merge(pigs_2,pigs_3, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$breed.x <- factor(df$breed.x,
levels=c("Landrace x Cross bred (LW x D)",
"Duroc x Landrace",
"Duroc x Large white",
"Large white x Duroc"))
res1 <- aov(diff ~ breed.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$breed.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe7_Fe14"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
breed_stats <- aov.out
breed_stats <- rbind(breed_stats,aov.out)
cw_summary <- df %>%
group_by(breed.x) %>%
tally()
plot_B_C <- ggboxplot(df, x="breed.x", y="diff", fill = "breed.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(breed.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_B_C
############
df <- merge(pigs_3,pigs_4, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$breed.x <- factor(df$breed.x,
levels=c("Landrace x Cross bred (LW x D)",
"Duroc x Landrace",
"Duroc x Large white",
"Large white x Duroc"))
res1 <- aov(diff ~ breed.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$breed.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe14_Fe21"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
breed_stats <- aov.out
breed_stats <- rbind(breed_stats,aov.out)
cw_summary <- df %>%
group_by(breed.x) %>%
tally()
plot_C_D <- ggboxplot(df, x="breed.x", y="diff", fill = "breed.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(breed.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_C_D
############
df <- merge(pigs_4,pigs_5, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$breed.x <- factor(df$breed.x,
levels=c("Landrace x Cross bred (LW x D)",
"Duroc x Landrace",
"Duroc x Large white",
"Large white x Duroc"))
res1 <- aov(diff ~ breed.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$breed.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe21_Fe28"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
breed_stats <- aov.out
breed_stats <- rbind(breed_stats,aov.out)
cw_summary <- df %>%
group_by(breed.x) %>%
tally()
plot_D_E <- ggboxplot(df, x="breed.x", y="diff", fill = "breed.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(breed.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_D_E
############
df <- merge(pigs_2,pigs_4, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$breed.x <- factor(df$breed.x,
levels=c("Landrace x Cross bred (LW x D)",
"Duroc x Landrace",
"Duroc x Large white",
"Large white x Duroc"))
res1 <- aov(diff ~ breed.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$breed.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe7_Fe21"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
breed_stats <- aov.out
breed_stats <- rbind(breed_stats,aov.out)
cw_summary <- df %>%
group_by(breed.x) %>%
tally()
plot_B_D <- ggboxplot(df, x="breed.x", y="diff", fill = "breed.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(breed.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_B_D
############
df <- merge(pigs_3,pigs_5, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$breed.x <- factor(df$breed.x,
levels=c("Landrace x Cross bred (LW x D)",
"Duroc x Landrace",
"Duroc x Large white",
"Large white x Duroc"))
res1 <- aov(diff ~ breed.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$breed.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe14_Fe28"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
breed_stats <- aov.out
breed_stats <- rbind(breed_stats,aov.out)
cw_summary <- df %>%
group_by(breed.x) %>%
tally()
plot_C_E <- ggboxplot(df, x="breed.x", y="diff", fill = "breed.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(breed.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_C_E
# this is for extracting the legend
for_legend_only <- ggboxplot(df, x = "breed.x", y = "diff", fill = "breed.x",
legend = "right")+
scale_fill_manual(labels = c("Landrace x Cross bred (LW x D)",
"Duroc x Landrace",
"Large white x Duroc",
"Duroc x Large white"
),
values = c("#0073C2FF",   # first 4 colors of jco palette
"#EFC000FF",
"#868686FF",
"#CD534CFF"
)) +
guides(fill=guide_legend("breed")) +
My_Theme
leg <- get_legend(for_legend_only)
empty_space = plot_grid(NULL, NULL, NULL, NULL, ncol=4)
top_row = plot_grid(plot_A_B,plot_B_C,plot_C_D,plot_D_E, ncol=4,
rel_widths=c(0.25,0.25,0.25,0.25),
labels=c("A-B","B-C","C-D","D-E"),
label_size = 10)
bottom_row = plot_grid(plot_B_D,plot_C_E, leg, ncol=3,
rel_widths=c(0.25,0.25,0.50),
labels=c("B-D","C-E",""),
label_size = 10)
all_plots <- plot_grid(empty_space,
top_row,
bottom_row,
nrow=3)
# pdf("weight_deltas_by_breed.pdf")
# ggdraw() +
#   draw_image(timeline_deltas, x = 0, y = 0.16) +
#   draw_plot(all_plots)
# dev.off()
# DELTA p-values - Breed
# convert rownames to first column
weight_delta_breed <- setDT(breed_stats, keep.rownames = TRUE)[]
# add data to workbook
addWorksheet(wb, "weight_delta_breed")
writeData(wb, sheet = "weight_delta_breed", weight_delta_breed, rowNames = FALSE)
##############################################################################
# bday
##############################################################################
df <- merge(pigs_1,pigs_2, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$BIRTH_DAY.x <- factor(df$BIRTH_DAY.x,
levels=c("2017-01-06",
"2017-01-07",
"2017-01-08",
"2017-01-09",
"2017-01-10",
"2017-01-11"))
res1 <- aov(diff ~ BIRTH_DAY.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$BIRTH_DAY.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Ja31_Fe7"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
bday_stats <- aov.out
cw_summary <- df %>%
group_by(BIRTH_DAY.x) %>%
tally()
plot_A_B <- ggboxplot(df, x="BIRTH_DAY.x", y="diff", fill = "BIRTH_DAY.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(BIRTH_DAY.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_A_B
############
df <- merge(pigs_2,pigs_3, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$BIRTH_DAY.x <- factor(df$BIRTH_DAY.x,
levels=c("2017-01-06",
"2017-01-07",
"2017-01-08",
"2017-01-09",
"2017-01-10",
"2017-01-11"))
res1 <- aov(diff ~ BIRTH_DAY.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$BIRTH_DAY.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe7_Fe14"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
bday_stats <- rbind(bday_stats,aov.out)
cw_summary <- df %>%
group_by(BIRTH_DAY.x) %>%
tally()
plot_B_C <- ggboxplot(df, x="BIRTH_DAY.x", y="diff", fill = "BIRTH_DAY.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(BIRTH_DAY.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_B_C
############
df <- merge(pigs_3,pigs_4, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$BIRTH_DAY.x <- factor(df$BIRTH_DAY.x,
levels=c("2017-01-06",
"2017-01-07",
"2017-01-08",
"2017-01-09",
"2017-01-10",
"2017-01-11"))
res1 <- aov(diff ~ BIRTH_DAY.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$BIRTH_DAY.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe14_Fe21"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
bday_stats <- rbind(bday_stats,aov.out)
cw_summary <- df %>%
group_by(BIRTH_DAY.x) %>%
tally()
plot_C_D <- ggboxplot(df, x="BIRTH_DAY.x", y="diff", fill = "BIRTH_DAY.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(BIRTH_DAY.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_C_D
############
df <- merge(pigs_4,pigs_5, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$BIRTH_DAY.x <- factor(df$BIRTH_DAY.x,
levels=c("2017-01-06",
"2017-01-07",
"2017-01-08",
"2017-01-09",
"2017-01-10",
"2017-01-11"))
res1 <- aov(diff ~ BIRTH_DAY.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$BIRTH_DAY.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe21_Fe28"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
bday_stats <- rbind(bday_stats,aov.out)
cw_summary <- df %>%
group_by(BIRTH_DAY.x) %>%
tally()
plot_D_E <- ggboxplot(df, x="BIRTH_DAY.x", y="diff", fill = "BIRTH_DAY.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(BIRTH_DAY.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_D_E
############
df <- merge(pigs_2,pigs_4, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$BIRTH_DAY.x <- factor(df$BIRTH_DAY.x,
levels=c("2017-01-06",
"2017-01-07",
"2017-01-08",
"2017-01-09",
"2017-01-10",
"2017-01-11"))
res1 <- aov(diff ~ BIRTH_DAY.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$BIRTH_DAY.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe7_Fe21"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
bday_stats <- rbind(bday_stats,aov.out)
cw_summary <- df %>%
group_by(BIRTH_DAY.x) %>%
tally()
plot_B_D <- ggboxplot(df, x="BIRTH_DAY.x", y="diff", fill = "BIRTH_DAY.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(BIRTH_DAY.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_B_D
############
df <- merge(pigs_3,pigs_5, by=c("isolation_source"))
df$diff = ((df$value.y-df$value.x)/df$value.y)*100
# reorder
df$BIRTH_DAY.x <- factor(df$BIRTH_DAY.x,
levels=c("2017-01-06",
"2017-01-07",
"2017-01-08",
"2017-01-09",
"2017-01-10",
"2017-01-11"))
res1 <- aov(diff ~ BIRTH_DAY.x, data=df)
res <- TukeyHSD(res1)
aov.out <- as.data.frame(res$BIRTH_DAY.x)
aov.out <- tibble::rownames_to_column(aov.out, "comparison")
aov.out$time_delta="Fe14_Fe28"
aov.out$test <- "anova"
aov.out$padj_method <- "TukeyHSD"
bday_stats <- rbind(bday_stats,aov.out)
cw_summary <- df %>%
group_by(BIRTH_DAY.x) %>%
tally()
plot_C_E <- ggboxplot(df, x="BIRTH_DAY.x", y="diff", fill = "BIRTH_DAY.x",
ylab="weight gain (%)", palette = "jco", legend = "none")+
My_Theme+
geom_text(data = cw_summary,
aes(BIRTH_DAY.x, Inf, label = n), vjust="inward", size = your_font_size)+
stat_compare_means(method = "anova", label.x=1.5, size = your_font_size)
plot_C_E
# this is for extracting the legend
for_legend_only <- ggboxplot(df, x = "BIRTH_DAY.x", y = "diff", fill = "BIRTH_DAY.x",
legend = "right")+
scale_fill_manual(labels = c("2017-01-06",
"2017-01-07",
"2017-01-08",
"2017-01-09",
"2017-01-10",
"2017-01-11"
),
values = c("#0073C2FF",   # first 6 colors of jco palette
"#EFC000FF",
"#868686FF",
"#CD534CFF",
"#7AA6DCFF",
"#003C67FF"
))+
guides(fill=guide_legend("birth day")) +
My_Theme
leg <- get_legend(for_legend_only)
empty_space = plot_grid(NULL, NULL, NULL, NULL, ncol=4)
top_row = plot_grid(plot_A_B,plot_B_C,plot_C_D,plot_D_E, ncol=4,
rel_widths=c(0.25,0.25,0.25,0.25),
labels=c("A-B","B-C","C-D","D-E"),
label_size = 10)
bottom_row = plot_grid(plot_B_D,plot_C_E, leg, ncol=3,
rel_widths=c(0.25,0.25,0.50),
labels=c("B-D","C-E",""),
label_size = 10)
all_plots <- plot_grid(empty_space,
top_row,
bottom_row,
nrow=3)
# pdf("weight_deltas_by_bday.pdf")
# ggdraw() +
#   draw_image(timeline_deltas, x = 0, y = 0.16) +
#   draw_plot(all_plots)
# dev.off()
# DELTA p-values - bday
# convert rownames to first column
weight_delta_bday <- setDT(bday_stats, keep.rownames = TRUE)[]
# add data to workbook
addWorksheet(wb, "weight_delta_bday")
writeData(wb, sheet = "weight_delta_bday", weight_delta_bday, rowNames = FALSE)
##################################################################################
##################################################################################
# save stats in existing workbook
saveWorkbook(wb, paste0(out_dir_git,"stats.xlsx"), overwrite=TRUE)
##################################################################################
##################################################################################
# let's look at weight changing over time
head(all_weights)
# reorder
all_weights$date <- factor(all_weights$date,
levels=c("31-Jan",
"7-Feb",
"14-Feb",
"21-Feb",
"28-Feb",
"6-Mar",
"7-Mar",
"8-Mar",
"9-Mar",
"10-Mar"))
# weight percentage change
z <- all_weights %>%
filter(date=="31-Jan"|date=="7-Feb"|date=="14-Feb"|date=="21-Feb"|date=="28-Feb") %>%
group_by(isolation_source) %>%
dplyr::arrange(date, .by_group = TRUE) %>%
dplyr::mutate(value = (value/lag(value) - 1) * 100)
pdf(paste0(out_dir,"weight_percentage_change.pdf"))
ggplot(all_weights, aes(x=date,y=log(value)))+
geom_point()+
geom_smooth(method = "loess", se=TRUE, aes(group=1))+
ggtitle("weight measurements across time")
ggplot(z, aes(x=date,y=log(value)))+
geom_point()+
geom_smooth(method = "loess", se=TRUE, aes(group=1))+
ggtitle("weight percentage change")
dev.off()
sink(paste0(out_dir,"weight_percentage_change.txt"))
z %>%
group_by(date) %>%
dplyr::summarise()
tapply(z$value, z$date, summary)
sink()
##################################################################################
##################################################################################
out_dir
out_dir = "/Users/12705859/Desktop/metapigs_base/phylosift/out/" # local
out_dir
out_dir_git = "/Users/12705859/metapigs_base/out_dir/" # git
paste0(out_dir_git,"stats.xlsx")
